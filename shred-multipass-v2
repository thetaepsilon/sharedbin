#!/bin/sh
set -eu;
if test $# -lt 3; then echo "Usage: $0 device blocksize pass_count"; exit 1; fi;
device="$1";
bs="$2";
count="$3";

common_extras="";

enabled() {
	# catch the empty case here so the below test doesn't trip up.
	test -n "$1" || return 1;

	# explicitly force a fail if a variable is non-numeric instead of silently proceeding without a potentially desired flag.
	# numeric comparison will fail for non-numbers.
	test "$1" -eq "$1" || {
		echo "# non-number value present in option variable. being safe and aborting." >&2;
		exit 2;
	};
	test "$1" -gt 0 || return $?;
}

# enable command line in-situ override, e.g. progress=1 shred-multipass-v2 ...
# otherwise fall back to the more conventional propogated environment variables.
if test -z "${progress:-}"; then progress="${SHRED_PROGRESS:-}"; fi;
if enabled "$progress"; then {
	common_extras="$common_extras status=progress";
}; fi;

buffer="${buffer:-}";
if enabled "$buffer"; then :; else {
	common_extras="$common_extras oflag=direct";
}; fi;

if test -n "$common_extras"; then {
	echo "# picked up common extra options: $common_extras" >&2;
}; fi;

discard="${discard:-}";
if enabled "$discard"; then {
	echo "# enabling discard at the end of each pass." >&2;
	discard=y;
}; else {
	discard="";
}; fi;

maybe_discard() {
	if test -n "$discard"; then {
		echo "# end of pass discard..." >&2;
		blkdiscard "$1";
	}; fi;
};

mkwipedata() {
	# data to wipe only has to be random on a per-block basis.
	# we're not trying to hide anything, but *destroy* old patterns
	# (otherwise a zero wipe would be sufficient).
	path=$(mktemp);
	echo "# gathering entropy..." >&2;
	dd if=/dev/urandom bs="$bs" count=1 iflag=fullblock of="$path" status=none;
	echo "$path";
}
runpass() {
	input=$(mkwipedata);
	echo "# writing blocks..." >&2;
	(while cat "$input"; do :; done) | dd iflag=fullblock bs="$bs" of="$device" $common_extras;
	rm "$input";
	maybe_discard "$device";
}



echo "Device $device will be erased in $count random passes + blank pass using blocksize $bs.";
echo "You have 10 seconds to abort the process.";
sleep 10;
echo "Starting erasure...";
for i in $(seq -- "$count"); do {
	echo "Starting random data pass, $i of $count";
	if runpass; then {
		echo "pass $i complete.";
	}; else {
		echo "warning: error occured during pass $i" >&2;
	}; fi;
}; done;

if test -z "$discard"; then {
	echo "Starting zero-fill erase pass...";
	dd if=/dev/zero bs="$bs" iflag=fullblock of="$device" $common_extras;
	echo "Blank pass completed.";
}; else {
	echo "# note: skipping blank pass because discard mode is on" >&2;
}; fi;

echo "Wipe complete.";
